<Window x:Name="WeatherWidget" x:Class="WeatherWidget.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WeatherWidget" 
        xmlns:fa="http://schemas.fontawesome.io/icons/"
        mc:Ignorable="d"
        Title="MainWindow" Height="200" Width="350" WindowStyle="None" 
        BorderThickness="0" ResizeMode="NoResize" 
        AllowsTransparency="True"
        Topmost="False"
        Left="{Binding Left, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
        Top="{Binding Top, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
        ShowInTaskbar="False" Loaded="WeatherWidget_Loaded" Activated="WeatherWidget_Activated"
        WindowStartupLocation="Manual" Background="Transparent"
        MouseLeftButtonDown="WeatherWidget_MouseLeftButtonDown">
    <Window.Resources>
        <Style TargetType="Button">
            <Setter Property="Height" Value="22"/>
            <Setter Property="Width" Value="22"/>
            <Setter Property="Background" Value="#00000000"/>
            <Setter Property="BorderThickness" Value="0"/>
        </Style>
        <Image x:Key="ShowTickImage" Source="/Images/ShowTick.png"/>
        <Image x:Key="HideTickImage" Source="/Images/HideTick.png"/>
        <Image x:Key="CloseWindowImage" Source="/Images/CloseWindow.png"/>
        <Image x:Key="UpdateImage" Source="/Images/Update.png"/>
        <Image x:Key="NotificationImage" Source="/Images/NotificationBell.png"/>
        <Image x:Key="NotificationOffImage" Source="/Images/NotificationOffBell.png"/>
    </Window.Resources>
    <Window.InputBindings>
        <KeyBinding Key="Return" Command="{Binding GetWeather}" />
    </Window.InputBindings>
    <Grid Name="MainGrid">
        <Grid.ContextMenu>
            <ContextMenu>
                <MenuItem IsCheckable="True" IsChecked="{Binding Autorun}" Header="Добавить виджет в автозагрузку" Command="{Binding SetAutorun}"/>
            </ContextMenu>
        </Grid.ContextMenu>
        <Grid.RowDefinitions>
            <RowDefinition Height="22"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <StackPanel Grid.Row="0" Height="22" VerticalAlignment="Top">
            <Grid Background="#0FEFEFEF">
                <StackPanel HorizontalAlignment="Right" Orientation="Horizontal">
                    <Button ToolTip="Закрыть" Content="{StaticResource CloseWindowImage}" Click="CloseButton_Click"/>
                </StackPanel>
                <StackPanel HorizontalAlignment="Left" Orientation="Horizontal">
                    <Button Command="{Binding SetNotification}">
                        <Image Source="{Binding NotifyImage}"/>
                    </Button>
                    <fa:ImageAwesome Visibility="{Binding Loading}" Source="/Images/Spinner1.png" Width="22" Spin="True" SpinDuration="3.5"/>
                    <Button Content="{StaticResource UpdateImage}" Command="{Binding GetWeather}" CommandParameter="{Binding CityBox}"/>
                    <TextBox Width="180" Text="{Binding LastCity, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Foreground="#7FFFFFFF" Background="#9F2F2F2F" BorderBrush="#CF2F2F2F"/>
                </StackPanel>
            </Grid>
        </StackPanel>
        <StackPanel Grid.Row="1" Name="AllDataGrid" Background="#0F0F0F0F" Orientation="Horizontal">
            <Image Source="{Binding Icon}" Stretch="Fill" Width="100" Height="100" Margin="10" VerticalAlignment="Top"/>
            <StackPanel>
                <Label Content="{Binding Temperature}" Foreground="#7FFFFFFF"/>
                <Label Content="{Binding FeelsLike}" Foreground="#7FFFFFFF"/>
                <Label Content="{Binding Humidity}" Foreground="#7FFFFFFF"/>
                <Label Content="{Binding Description}" Foreground="#7FFFFFFF"/>
                <Label Content="{Binding Wind}" Foreground="#7FFFFFFF"/>
                <Label Content="{Binding WindDegree}" Foreground="#7FFFFFFF"/>
            </StackPanel>
        </StackPanel>
        <Popup Name="PopupNotification" IsOpen="{Binding PopupOpen}" StaysOpen="False" AllowsTransparency="True" PopupAnimation="Fade" MouseDown="PopupNotification_MouseDown">
            <Grid>
                <Canvas Name="NotificationCanvas" Width="300" Height="50" Margin="0, 50">
                    <Canvas.Background>
                        <LinearGradientBrush StartPoint="0 0" EndPoint="1 0">
                            <LinearGradientBrush.GradientStops>
                                <GradientStop Offset="0.1" Color="#9F2F2F2F" />
                                <GradientStop Offset="1" Color="#CF2F2F2F" />
                            </LinearGradientBrush.GradientStops>
                        </LinearGradientBrush>
                    </Canvas.Background>
                </Canvas>
                <TextBlock Foreground="LightGray" FontSize="18" HorizontalAlignment="Center" VerticalAlignment="Center">Погодные данные обновлены!</TextBlock>
            </Grid>
        </Popup>
    </Grid>
</Window>
